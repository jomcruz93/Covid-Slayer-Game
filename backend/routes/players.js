const router = require('express').Router()
let Player = require('../models/player.model')
let PlayerSession = require('../models/playerSession.model')

/*
Player information:
1. Player ID (use object id generated by mongodb)
2. Full name
3. Email
4. Password
5. Avatar
6. Settings (auto log-in)
7. Battle history (array, store one object id for each battle)

const playerSchema = new Schema({
  playerId: { type: Number, required: true },
  fullName: { type: String, required: true },
  email: { type: String, required: true },
  password: { type: String, required: true },
  playerAvatarId: { type: Number, required: true }
})
*/

router.route('/').get((req, res) => {
  // get all players' data
  Player.find({})
    .then(playerData => res.json(playerData))
    .catch(err => res.status(400).json('Error: ' + err))
})

// For registration.
router.route('/signup').post((req, res) => {
  const newPlayer = new Player()

  newPlayer.fullName = req.body.name.trim()
  newPlayer.email = req.body.email.toLowerCase().trim()
  newPlayer.password = newPlayer.generateHash(req.body.password)
  newPlayer.playerAvatarId = Number(req.body.avatar)

  newPlayer.save()
    .then(player => res.json(player._id))
    .catch(err => res.status(400).json('Error: ' + err))
})

// For login.
router.route('/login').post((req, res) => {
  const email = req.body.email.toLowerCase().trim()
  const password = req.body.password

  Player.find({ email: email })
    .then(playerData => {
      if (playerData.length != 1) {
        res.status(400).json('Error: Invalid')
      } else {
        const player = playerData[0]
        if (!player.validPassword(password)) {
          res.status(400).json('Error: Invalid')
        }

        const playerSession = new PlayerSession()
        playerSession.playerId = player._id
        playerSession.save()
          .then(token => res.json({
            tokenId: token._id,
            fullName: player.fullName,
            avatarId: player.playerAvatarId,
            playerId: player._id
          }))
          .catch(err => res.status(400).json('Error: ' + err))
      }
    })
})

router.route('/update/:id').post((req, res) => {
  // update player info by id
})




module.exports = router